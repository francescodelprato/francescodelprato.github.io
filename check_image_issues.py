import re
import os
import json

# Regex for HTML <img> tags
# Looks for src and then checks alt.
html_img_src_regex = re.compile(r'<img\s+[^>]*?src\s*=\s*["']([^"']+)["'][^>]*?>', re.IGNORECASE | re.DOTALL)
html_alt_regex = re.compile(r'alt\s*=\s*["']([^"']*?)["']', re.IGNORECASE)

# Simplified Astro <Image /> regex
# Looks for src and then checks alt.
astro_image_src_regex = re.compile(r'<Image\s+[^>]*?src\s*=\s*["']([^"']+)["'][^>]*?/>', re.IGNORECASE | re.DOTALL)
# This will also find alt={variable}, which we will treat as present unless it's alt={""}
astro_alt_regex = re.compile(r'alt\s*=\s*(["']([^"']*?)["']|\{([^}]*?)\})', re.IGNORECASE)

# Regex for Markdown images: extracts alt and src
markdown_image_regex = re.compile(r'!\[([^\]]*)\]\(([^)]+)\)')

# Regex for ImageGrid component data structure
image_grid_prop_regex = re.compile(r'images\s*=\s*{\s*\[([\s\S]*?)\]\s*}', re.IGNORECASE | re.DOTALL)
image_grid_item_regex = re.compile(r'{\s*src:\s*["']([^"']+)["'],\s*alt:\s*["']([^"']*)["'][^}]*\}', re.IGNORECASE | re.DOTALL)


files_content_raw = """
[{"path": "src/components/BaseHead.astro", "content": "---\ninterface Props {\n  title?: string;\n  description?: string;\n  image?: string;\n}\n\nimport { metaData } from \"../config\";\nimport { SEO } from \"astro-seo\";\n\nimport { getImagePath } from \"astro-opengraph-images\";\n\nconst { title, description = metaData.description, image } = Astro.props;\n\nconst { url, site } = Astro;\nconst openGraphImageUrl = getImagePath({ url, site });\n\n// If the image is not provided, use the default image\nconst openGraphImage = image\n  ? new URL(image, url.href).href\n  : openGraphImageUrl;\n---\n\n<SEO\n  title={title}\n  titleTemplate=`%s | ${metaData.title}`\n  titleDefault={metaData.title}\n  description={description}\n  charset=\"UTF-8\"\n  openGraph={{{\n    basic: {\n      title: title || metaData.title,\n      type: \"website\",\n      image: openGraphImageUrl,\n      url: url,\n    },\n    optional: {\n      description,\n      siteName: \"Francesco Del Prato\",\n      locale: \"en_US\",\n    },\n  }}}\n  twitter={{{\n    card: \"summary_large_image\",\n    title: title || metaData.title,\n    description,\n    image: openGraphImage,\n    creator: \"@fdelprato\",\n  }}}\n  extend={{{\n    // extending the default link tags\n    link: [{ rel: \"icon\", href: \"/favicon.ico\" }],\n  }}}\n/>"}, 
 {"path": "src/components/Footer.astro", "content": "---\nimport { metaData, socialLinks } from \"../config\";\nimport { Icon } from \"astro-icon/components\";\n\nconst YEAR = new Date().getFullYear();\n\nconst socialIcons = [\n  { href: socialLinks.twitter, icon: \"fa6-brands:x-twitter\" },\n  { href: socialLinks.linkedin, icon: \"fa6-brands:linkedin-in\" },\n  { href: socialLinks.email, icon: \"tabler:mail-filled\" },\n];\n---\n\n<small class=\"block lg:mt-24 mt-16 text-[#1C1C1C] dark:text-[#D4D4D4]\">\n  <time>Â© {YEAR}</time>{\" \"}\n  <a\n    class=\"no-underline\"\n    href={socialLinks.twitter}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\">\n    {metaData.title}\n  </a>\n  <div\n    class=\"flex text-lg gap-3.5 float-right transition-opacity duration-300 hover:opacity-90\">\n    {\n      socialIcons.map((link) => (\n        <a href={link.href} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name={link.icon} />\n        </a>\n      ))\n    }\n    <a href=\"/rss.xml\" target=\"_self\">\n      <Icon name=\"fa6-solid:rss\" />\n    </a>\n  </div>\n</small>\n\n<style>\n  @media screen and (max-width: 480px) {\n    article {\n      padding-top: 2rem;\n      padding-bottom: 4rem;\n    }\n  }\n</style>"}, 
 {"path": "src/components/FormattedDate.astro", "content": "---\ninterface Props {\n  date: Date | string;\n  includeRelative?: boolean;\n}\n\nconst { date, includeRelative = false } = Astro.props;\n\nconst formatDate = (date: Date | string, includeRelative: boolean): string => {\n  let currentDate = new Date();\n  let targetDate = date instanceof Date ? date : new Date(date);\n\n  if (isNaN(targetDate.getTime())) {\n    console.error(\"Invalid date:\", date);\n    return \"Invalid Date\";\n  }\n\n  let yearsAgo = currentDate.getFullYear() - targetDate.getFullYear();\n  let monthsAgo = currentDate.getMonth() - targetDate.getMonth();\n  let daysAgo = currentDate.getDate() - targetDate.getDate();\n\n  let formattedDate = \"\";\n\n  if (yearsAgo > 0) {\n    formattedDate = `${yearsAgo}y ago`;\n  } else if (monthsAgo > 0) {\n    formattedDate = `${monthsAgo}mo ago`;\n  } else if (daysAgo > 0) {\n    formattedDate = `${daysAgo}d ago`;\n  } else {\n    formattedDate = \"Today\";\n  }\n\n  let fullDate = targetDate.toLocaleString(\"en-us\", {\n    month: \"short\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n\n  if (!includeRelative) {\n    return fullDate;\n  }\n\n  return `${fullDate} (${formattedDate})`;\n};\n\nconst formattedDateString = formatDate(date, includeRelative);\n---\n\n<time datetime={new Date(date).toISOString()}>
  {formattedDateString}
</time>"}, 
 {"path": "src/components/Nav.astro", "content": "---\nimport { metaData } from \"../config\";\nimport { Icon } from \"astro-icon/components\";\n\nconst navItems = {\n  \"/research\": { name: \"Research\" },\n  \"/teaching\": { name: \"Teaching\" },\n  \"/op-eds\":   { name: \"Op-eds\"  },\n  \"/DelPrato_CV.pdf\" : { name : \"CV\" },\n};\n---\n\n<nav class=\"lg:mb-16 mb-12 py-5\">\n  <div class=\"flex flex-col md:flex-row md:items-center justify-between\">\n    <div class=\"flex items-center\">\n      <a href=\"/\" class=\"text-3xl font-semibold\">\n        {metaData.title}\n      </a>\n    </div>\n    <div class=\"flex flex-row gap-4 mt-6 md:mt-0 md:ml-auto items-center\">\n      {\n        Object.entries(navItems).map(([path, { name }]) => (\n          <a\n            href={path}\n            class=\"transition-all hover:text-neutral-800 dark:hover:text-neutral-200 flex align-middle relative\">\n            {name}\n          </a>\n        ))\n      }\n      <button\n        id=\"theme-toggle\"\n        aria-label=\"Toggle theme\"\n        class=\"flex items-center justify-center transition-opacity duration-300 hover:opacity-90\">\n        <Icon\n          name=\"fa6-solid:circle-half-stroke\"\n          class=\"h-[14px] w-[14px] text-[#1c1c1c] dark:text-[#D4D4D4]\"\n        />\n      </button>\n    </div>\n  </div>\n</nav>\n\n<script is:inline>\n  function setTheme(theme) {\n    document.dispatchEvent(new CustomEvent(\"set-theme\", { detail: theme }));\n  }\n\n  function toggleTheme() {\n    const currentTheme = document.documentElement.getAttribute(\"data-theme\");\n    const newTheme = currentTheme === \"dark\" ? \"light\" : \"dark\";\n    setTheme(newTheme);\n  }\n\n  document.addEventListener(\"astro:page-load\", () => {\n    document\n      .getElementById(\"theme-toggle\")\n      .addEventListener(\"click\", toggleTheme);\n  });\n</script>"}, 
 {"path": "src/components/mdx/Callout.astro", "content": "---\ninterface Props {\n  emoji: string;\n}\n\nconst { emoji } = Astro.props;\n---\n\n<div\n  class=\"px-4 py-3 bg-[#F7F7F7] dark:bg-[#181818] rounded p-1 text-sm flex items-center text-neutral-900 dark:text-neutral-100 mb-8\">\n  <div class=\"flex items-center w-4 mr-4\">{emoji}</div>\n  <div class=\"w-full callout leading-relaxed\">\n    <slot />\n  </div>\n</div>"}, 
 {"path": "src/components/mdx/Caption.astro", "content": "---\nimport { Balancer } from \"react-wrap-balancer\";\n---\n\n<span\n  class=\"block w-full text-xs my-3 font-mono text-gray-500 text-center leading-normal\">\n  <Balancer>\n    <span class=\"\">\n      <slot />\n    </span>\n  </Balancer>\n</span>"}, 
 {"path": "src/components/mdx/ImageGrid.astro", "content": "---\nimport { Image } from \"astro:assets\";\n\ninterface ImageGridProps {\n  images: {\n    src: string;\n    alt: string;\n    href?: string;\n  }[];\n  columns?: 2 | 3 | 4;\n}\n\nconst { images, columns = 3 } = Astro.props as ImageGridProps;\n\nconst gridClass = {\n  2: \"grid-cols-2 sm:grid-cols-2\",\n  3: \"grid-cols-2 sm:grid-cols-3\",\n  4: \"grid-cols-2 sm:grid-cols-4\",\n}[columns];\n---\n\n<section>\n  <div class={`grid ${gridClass} gap-4 my-8`}>\n    {\n      images.map((image) => (\n        <div class=\"relative aspect-square\">\n          {image.href ? (\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={image.href}\n              class=\"block w-full h-full\">\n              <Image\n                alt={image.alt}\n                src={image.src}\n                width={500}\n                height={500}\n                class=\"rounded-lg object-cover w-full h-full\"\n              />\n            </a>\n          ) : (\n            <Image\n              alt={image.alt}\n              src={image.src}\n              width={500}\n              height={500}\n              class=\"rounded-lg object-cover w-full h-full\"\n            />\n          )}\n        </div>\n      ))\n    }\n  </div>\n</section>"}, 
 {"path": "src/components/mdx/Table.astro", "content": "---\ninterface TableData {\n  headers: string[];\n  rows: string[][];\n}\n\ninterface Props {\n  data: TableData;\n}\n\nconst { data } = Astro.props;\n---\n\n<table>\n  <thead>\n    <tr class=\"text-left\">\n      {data.headers.map((header) => <th>{header}</th>)}\n    </tr>\n  </thead>\n  <tbody>\n    {\n      data.rows.map((row) => (\n        <tr>\n          {row.map((cell) => (\n            <td>{cell}</td>\n          ))}\n        </tr>\n      ))\n    }\n  </tbody>\n</table>"}, 
 {"path": "src/components/mdx/Tweet.astro", "content": "---\nimport { getTweet } from \"react-tweet/api\";\nimport { EmbeddedTweet, TweetNotFound, type TweetProps } from \"react-tweet\";\nimport \"./tweet.css\";\n\ninterface Props {\n  id: string;\n}\n\nconst { id } = Astro.props;\n\nlet tweet;\nlet error;\n\nif (id) {\n  try {\n    tweet = await getTweet(id);\n  } catch (err) {\n    console.error(err);\n    error = err;\n  }\n}\n\nconst TweetContent = () => {\n  if (!tweet) {\n    return <TweetNotFound error={error} />jsx;\n  }\n  return <EmbeddedTweet tweet={tweet} />jsx;\n};\n---\n\n<div class=\"tweet my-6\">\n  <div class=\"flex justify-center\">\n    <TweetContent />\n  </div>\n</div>"}, 
 {"path": "src/components/mdx/YouTube.astro", "content": "---\nimport YT from \"react-youtube\";\n\ninterface Props {\n  videoId: string;\n}\n\nconst { videoId } = Astro.props;\n---\n\n<div class=\"relative w-full h-0 pb-[56.25%] my-6\">\n  <YT\n    opts={{{\n      height: \"100%\",\n      width: \"100%\",\n    }}}\n    videoId={videoId}\n    class=\"absolute top-0 left-0 w-full h-full\"\n  />\n</div>"}, 
 {"path": "src/content/blog/custom-mdx-examples.mdx", "content": "---\ntitle: \"Custom MDX Examples\"\npublishedAt: \"2024-08-11\"\nsummary: \"Astrofolio custom MDX examples.\"\ntags: \"Custom MDX, Web development\"\n---\nimport { Image } from \"astro:assets\";\nimport Tweet from \"astro-tweet\";\nimport { YouTube } from '@astro-community/astro-embed-youtube';\nimport ImageGrid from \"../../components/mdx/ImageGrid.astro\";\nimport Caption from \"../../components/mdx/Caption.astro\";\nimport Table from \"../../components/mdx/Table.astro\";\nimport Callout from \"../../components/mdx/Callout.astro\";\n\nAstrofolio uses [custom MDX](https://github.com/vikas5914/Astrofolio/blob/main/src/components/mdx) for blog posts, making it easy to include JSX components such as interactive embeds, charts, or alerts directly in your markdown content.\n\nHere are some examples of using MDX:\n\n## h2 Heading\n\n### h3 Heading\n\n#### h4 Heading\n\n##### h5 Heading\n\n## Emphasis\n\n**This is bold text**\n\n_This is italic text_\n\n<del> Strikethrough </del>\n\n## Blockquotes\n\n> If today were the last day of my life, would I want to do what I am about to do today? â Steve Jobs\n\n## Links\n\n- Astrofolio is built with [Astro](https://astro.build/).\n- Astrofolio uses [bun](https://bun.sh/) for package management.\n\n## CodeBlocks\n\n```jsx\n// This is commented-out code\nexport default function HelloWorld() {\n  return (\n    <h1>Hello, World!</h1>\n  );\n}\n```\n\n## Images\n\nAstrofolio uses [Astro Image](https://docs.astro.build/en/guides/images/) in MDX for seamless image rendering:\n\n```jsx\n<Image\n  src=\"/opengraph-image.png\"\n  alt=\"OpenGraph image\"\n  width={640}\n  height={500}\n/>\n```\n\nRenders:\n\n<Image\n  src=\"/opengraph-image.png\"\n  alt=\"OpenGraph image\"\n  width={640}\n  height={500}\n/>\n\n## Image Grid\n\nAstrofolio uses a custom [image grid component](https://github.com/vikas5914/Astrofolio/blob/main/src/components/mdx/ImageGrid.astro) to display image galleries.\n\n```jsx\n<ImageGrid\n  columns={3} // Accepts 2, 3, or 4 columns\n  images={[[\n    { src: \"/photos/photo1.jpg\", alt: \"Photo1\", href: \"#\" }, // 'href' is optional\n    { src: \"/photos/photo2.jpg\", alt: \"Photo2\", href: \"#\" },\n    { src: \"/photos/photo3.jpg\", alt: \"Photo3\"},\n  ]]}\n/>\n```\n\nRenders:\n\n<ImageGrid\n  columns={3}\n  images={[[\n    { src: \"/photos/photo1.jpg\", alt: \"Photo1\", href: \"#\" },\n    { src: \"/photos/photo2.jpg\", alt: \"Photo2\", href: \"#\" },\n    { src: \"/photos/photo3.jpg\", alt: \"Photo3\" },\n  ]]}\n/>\n\n## Embeds\n\n### Tweets\n\nAstrofolio uses [astro-tweet](https://github.com/tsriram/astro-tweet/) to embed tweets in MDX posts.\n\n```jsx\n<Tweet id=\"1617979122625712128\" />\n```\n\nRenders:\n\n<div className=\"tweet\">\n  <div className={`flex justify-center`}>\n    <Tweet id=\"1617979122625712128\" />\n  </div>\n</div>\n\n\n### YouTube Videos\n\nAstrofolio uses [astro-embed](https://astro-embed.netlify.app/) to embed YouTube videos in MDX posts.\n\n```jsx\n<YouTube id=\"wXhTHyIgQ_U\" />\n```\n\nRenders:\n\n<YouTube id=\"wXhTHyIgQ_U\" />\n\n### Captions\n\nAstrofolio uses [react-wrap-balancer](https://react-wrap-balancer.vercel.app/) to evenly balance captions in MDX posts.\n\n```jsx\n<Caption>\n  Captions that flow smoothly, making your content easy to read and visually\n  appealing with a clean look.\n</Caption>\n```\n\nRenders:\n\n<Caption>\n  Captions that flow smoothly, making your content easy to read and visually\n  appealing with a clean look.\n</Caption>\n\n## Tables\n\nAstrofolio uses a custom [table component](https://github.com/vikas5914/Astrofolio/blob/main/src/components/mdx/Table.astro) to render tables in MDX posts.\n\n```jsx\n<Table\n  data={{{\n    headers: [\"Title\", \"Description\"],\n    rows: [\n      [\n        \"First item\",\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquid perspiciatis repellat amet quos.\",\n      ],\n      [\n        \"Second item\",\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquid perspiciatis repellat amet quos.\",\n      ],\n    ],\n  }}}\n/>\n```\n\nRenders:\n\n<Table\n  data={{{\n    headers: [\"Title\", \"Description\"],\n    rows: [\n      [\n        \"First item\",\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquid perspiciatis repellat amet quos.\",\n      ],\n      [\n        \"Second item\",\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Aliquid perspiciatis repellat amet quos.\",\n      ],\n    ],\n  }}}\n/>\n\n## Math Expressions\n\nAstrofolio allows you to render mathematical expressions in MDX posts using [KaTeX](https://katex.org/) . Simply wrap your expression in **$** to include KaTeX within your MDX content.\n\n```\n$\n\\int_0^\\infty e^{-x^2} dx = \\frac{\\sqrt{\\pi}}{2}\n$\n```\n\nRenders:\n\n$\n\\int_0^\\infty e^{-x^2} dx = \\frac{\\sqrt{\\pi}}{2}\n$\n\n## Callout\n\nAstrofolio uses a custom [callout component](https://github.com/vikas5914/Astrofolio/blob/main/src/components/mdx/Callout.astro) to render important information in MDX posts.\n\n```jsx\n<Callout emoji=\"ð¡\">\n  [Astrofolio](https://astrofolio-astro.vercel.app/) is a clean, simple, and fast portfolio built with Astro, Tailwind CSS, and bun for optimal performance.\n</Callout>\n```\n\nRenders:\n\n<Callout emoji=\"ð¡\">\n  [Astrofolio](https://astrofolio-astro.vercel.app/) is a clean, simple, and fast portfolio built with Astro, Tailwind CSS, and bun for optimal performance.\n</Callout>"}, 
 {"path": "src/content/blog/getting-started.mdx", "content": "---\ntitle: \"Getting Started with Astrofolio\"\npublishedAt: \"2024-08-13\"\nsummary: \"Instructions to build and configure your Astrofolio portfolio.\"\ntags: \"Configuration, Web development\"\n---\n\nAstrofolio includes all the essentials for a stunning portfolio website.\n\nStart by [deploying](https://vercel.com/new/clone?repository-url=https://github.com/vikas5914/Astrofolio) your portfolio with Vercel in minutes, or fork the [repository](https://github.com/vikas5914/Astrofolio) and follow the instructions below to set it up.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https://github.com/vikas5914/Astrofolio)\n\n## Installation\n\nAstrofolio uses [bun](https://bun.sh) for dependency management, so ensure it is installed on your system.\n\nClone the repository and run the following command to install the dependencies:\n\n```jsx\ngit clone https://github.com/vikas5914/Astrofolio\ncd Astrofolio\nbun i\n```\n\nStart the development server:\n\n```jsx\nbun dev\n```\n\nThe server will be running at [http://localhost:4321/](http://localhost:4321/).\n\n## Configuration\n\nCustomize your Astrofolio setup by updating your information to ensure proper SEO, feed generation, Open Graph integration, and other settings.\n\n### Config.ts\n\nUpdate the site metadata and social links in the **src/config.js** file. These constants are utilized across the site for SEO, feeds, social links, and Open Graph integration.\n\n```jsx\nexport const metaData = {\n  baseUrl: \"https://astrofolio-astro.vercel.app/\",\n  title: \"Astrofolio\",\n  name: \"Vikas\",\n  ogImage: \"/opengraph-image.png\",\n  description:\n    \"A clean, fast, and lightweight portfolio template built with Next.js, Vercel, and Tailwind CSS for optimal performance.\",\n};\n\nexport const socialLinks = {\n  twitter: \"https://x.com/vikas5914\",\n  github: \"https://github.com/vikas5914/Astrofolio\",\n  instagram: \"https://www.instagram.com/\",\n  linkedin: \"https://www.linkedin.com/\",\n  email: \"mailto:example@gmail.com\",\n};\n\n```\n\n### Sitemap\n\nWith Astro Sitemap, you donât have to worry about creating this XML file yourself: the Astro Sitemap integration will crawl your statically-generated routes and create the sitemap file.\n\n### Profile Photo\n\nUpdate your profile photo by replacing the **public/profile.png** file with your image.\n\n### Favicon\n\nUpdate your favicon by replacing the **public/favicon.ico** file with your custom icon.\n\n## Analytics\n\nAstrofolio uses [Vercel Web Analytics](https://vercel.com/docs/analytics/quickstart) to monitor user interactions. Simply deploy your site on Vercel and enable feature through the Vercel dashboard.\n\n## Ready!\n\nYou're all set! Update your blog posts in the **/content** folder, add your project data in **pages/projects/index.astro**, and update your images in **pages/photos/index.astro**.\n\nYour portfolio is equipped with SEO and [RSS](/rss.xml), as well as analytics. Astrofolio is fully customizable, allowing you to add features as needed."}, 
 {"path": "src/layouts/Base.astro", "content": "---\ninterface Props {\n  title?: string;\n  description?: string;\n  image?: string;\n}\n\nimport Themes from \"astro-themes\";\nimport { ViewTransitions } from \"astro:transitions\";\n\nimport BaseHead from \"../components/BaseHead.astro\";\nimport Navbar from \"../components/Nav.astro\";\nimport Footer from \"../components/Footer.astro\";\n\nimport \"@fontsource/geist-sans/400.css\";\nimport \"@fontsource/geist-sans/600.css\";\nimport \"@fontsource/geist-mono/400.css\";\nimport \"@fontsource/geist-mono/600.css\";\nimport \"@styles/global.css\";\n\nconst { title, description, image } = Astro.props;\n---\n\n<html lang=\"en\" class=\"scrollbar-hide lenis lenis-smooth\">\n  <head>\n\t\n<!-- Google tag (gtag.js) -->\n<script\n  is:inline\n  type=\"text/partytown\"\n  src=\"https://www.googletagmanager.com/gtag/js?id=G-CB0P1912PV\"\n></script>\n\n<script is:inline type=\"text/partytown\">\n  window.dataLayer = window.dataLayer || [];\n  function gtag() {\n    dataLayer.push(arguments);\n  }\n  gtag(\"js\", new Date());\n\n  gtag(\"config\", \"G-CB0P1912PV\");\n</script>\n\n\n    <ViewTransitions />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta\n      name=\"googlebot\"\n      content=\"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1\"\n    />\n    <link rel=\"sitemap\" href=\"/sitemap-index.xml\" />\n    <Themes />\n    <BaseHead title={title} description={description} image={image} />\n    <link\n      rel=\"alternate\"\n      type=\"application/rss+xml\"\n      title=\"Francesco Del Prato\"\n      href={new URL(\"rss.xml\", Astro.site)}\n    />\n    <script>\n      import \"@scripts/lenisSmoothScroll.js\";\n    </script>\n  </head>\n  <body\n    class=\"antialiased flex flex-col items-center justify-center mx-auto mt-2 lg:mt-8 mb-20 lg:mb-40\n    scrollbar-hide\">\n    <main\n      class=\"flex-auto min-w-0 mt-2 md:mt-6 flex flex-col px-6 sm:px-4 md:px-0 max-w-[640px] w-full\">\n      <Navbar />\n      <slot />\n      <Footer />\n    </main>\n    <style>\n      /* CSS rules for the page scrollbar */\n      .scrollbar-hide::-webkit-scrollbar {\n        display: none;\n      }\n\n      .scrollbar-hide {\n        -ms-overflow-style: none;\n        scrollbar-width: none;\n      }\n    </style>\n  </body>\n</html>"}, 
 {"path": "src/pages/blog/[...slug].astro", "content": "---\nimport { type CollectionEntry, getCollection } from \"astro:content\";\nimport Base from \"../../layouts/Base.astro\";\nimport FormattedDate from \"../../components/FormattedDate.astro\";\nimport \"katex/dist/katex.min.css\";\nimport { metaData } from \"../../config\";\n\nexport async function getStaticPaths() {\n  const posts = await getCollection(\"blog\");\n  return posts.map((post) => ({\n    params: { slug: post.slug },\n    props: post,\n  }));\n}\ntype Props = CollectionEntry<\"blog\">;\n\nimport { getImagePath } from \"astro-opengraph-images\";\nconst post = Astro.props;\nconst { url, site } = Astro;\nconst openGraphImageUrl = getImagePath({ url, site });\n\nconst { Content } = await post.render();\n---\n\n<Base title={post.data.title} description={post.data.summary}>\n  <section>\n    <script\n      type=\"application/ld+json\"\n      set:html={JSON.stringify({\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"BlogPosting\",\n        headline: post.data.title,\n        datePublished: post.data.publishedAt,\n        dateModified: post.data.publishedAt,\n        description: post.data.summary,\n        image: openGraphImageUrl,\n        url: url,\n        author: {\n          \"@type\": \"Person\",\n          name: metaData.name,\n        },\n      })}\n    />\n    <h1 class=\"title mb-3 font-medium text-2xl tracking-tight\">\n      {post.data.title}\n    </h1>\n    <div class=\"flex justify-between items-center mt-2 mb-8 text-medium\">\n      <p class=\"text-sm text-neutral-600 dark:text-neutral-400\">\n        <FormattedDate date={post.data.publishedAt} includeRelative={false} />\n      </p>\n    </div>\n    <article class=\"prose prose-quoteless prose-neutral dark:prose-invert\">\n      <Content />\n    </article>\n  </section>\n</Base>"}, 
 {"path": "src/pages/blog/index.astro", "content": "---\nimport Base from \"../../layouts/Base.astro\";\nimport { getCollection } from \"astro:content\";\nimport FormattedDate from \"../../components/FormattedDate.astro\";\n\nconst posts = (await getCollection(\"blog\")).sort(\n  (a, b) => b.data.publishedAt.valueOf() - a.data.publishedAt.valueOf()\n);\n\nconst title = \"Blog\";\nconst description = \"Astrofolio Blog\";\n---\n\n<Base title={title} description={description}>\n  <section>\n    <h1 class=\"mb-8 text-2xl font-medium tracking-tight\">Our Blog</h1>\n    <div>\n      {\n        posts.map((post) => (\n          <a\n            class=\"flex flex-col space-y-1 mb-4 transition-opacity duration-200 hover:opacity-80\"\n            href={`/blog/${post.slug}`}>\n            <div class=\"w-full flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-1 sm:space-y-0 sm:space-x-2\">\n              <p class=\"text-black dark:text-white tracking-tight\">\n                {post.data.title}\n              </p>\n              <p class=\"text-neutral-600 dark:text-neutral-400 tabular-nums text-sm\">\n                <FormattedDate\n                  date={post.data.publishedAt}\n                  includeRelative={false}\n                />\n              </p>\n            </div>\n          </a>\n        ))\n      }\n    </div>\n  </section>\n</Base>"}, 
 {"path": "src/pages/index.astro", "content": "---\nimport Base from \"../layouts/Base.astro\";\nimport { socialLinks } from \"../config\";\nimport { Image } from \"astro:assets\";\n---\n\n<Base>\n  <section>\n    <a href={socialLinks.twitter} target=\"_blank\">\n      <Image\n        src={`${import.meta.env.BASE_URL}profile.png`}\n        alt=\"Profile photo\"\n        class=\"rounded-full bg-gray-100 block lg:mt-5 mt-0 lg:mb-5 mb-10 mx-auto sm:float-right sm:ml-5 sm:mb-5 grayscale hover:grayscale-0\"\n        width={160}\n        height={160}\n      />\n    </a>\n\n    <h1 class=\"mb-2 text-2xl font-medium tracking-tight\">\n      About me\n    </h1>\n\n    <div class=\"prose prose-neutral dark:prose-invert\">\n      <p>I am an assistant professor at the Department of Economics and Business Economics at <a href=\"https://econ.au.dk/\">Aarhus University</a>.</p> \n      <p>I am interested in Macro/Labor Economics, particularly the interplay between labor market dynamics and public policy.</p>\n      <p>My work usually employs a mix of structural and reduced-form approaches that exploit administrative microdata.</p>\n   \n      <h1 class=\"mb-2 text-2xl font-medium tracking-tight\">\n        Contact\n      </h1>\n      <p>\n        Department of Economics and Business Economics <br>\n        Aarhus BSS, Aarhus University <br>\n        Fuglesangs AllÃ© 4, bld. 2632 <br>\n        8210 Aarhus V, Denmark\n      </p>\n    </div>\n  </section>\n</Base>"}, 
 {"path": "src/pages/op-eds/index.astro", "content": "---\nimport Base from \"../../layouts/Base.astro\";\n\nconst opEds = [\n  {\n    title: \"Le criticitÃ  di un salario minimo a 9 euro nel contesto Italiano\",\n    publication: \"Il Foglio\",\n    date: \"17 giugno 2022\",\n    coauthor: \"Matteo Paradisi\",\n    pdf: \"/opeds/salariominimo_foglio_22.pdf\",\n    digital: \"https://www.ilfoglio.it/economia/2022/06/17/news/le-criticita-di-un-salario-minimo-a-9-euro-nel-contesto-italiano--4126922/\"\n  },\n  {\n    title: \"Alireza ha scelto\",\n    publication: \"Il Foglio\",\n    date: \"26 gennaio 2022\",\n    coauthor: \"Cecilia Sala\",\n    digital: \"https://www.ilfoglio.it/cultura/2022/01/29/news/preferisci-l-iran-o-vincere-alireza-ha-scelto-3589459/\"\n  },\n  {\n    title: \"Una bolla per le RSA\",\n    publication: \"Il Foglio\",\n    date: \"29 ottobre 2020\",\n    coauthor: \"Gianluca Rinaldi\",\n    pdf: \"/opeds/rsa_foglio.pdf\",\n    digital: \"https://www.ilfoglio.it/salute/2020/10/29/news/una-bolla-anti-covid-per-le-rsa-1322600/\"\n  },\n  {\n    title: \"Lâunico vero antidoto a Quota 100 si chiama Ape Volontario\",\n    publication: \"Il Foglio\",\n    date: \"2 gennaio 2020\",\n    coauthor: \"Matteo Paradisi\",\n    pdf: \"/opeds/ape_foglio.pdf\",\n    digital: \"https://www.ilfoglio.it/economia/2020/01/02/news/lunico-vero-antidoto-a-quota-100-si-chiama-ape-volontario-294615/\"\n  },\n  {\n    title: \"Tutte le tasse di Fioramonti, tra inefficacia e iniquitÃ \",\n    publication: \"Il Foglio\",\n    date: \"27 settembre 2019\",\n    coauthor: \"Matteo Paradisi\",\n    pdf: \"/opeds/sugar_tax_foglio.pdf\",\n    digital: \"https://www.ilfoglio.it/economia/2019/09/26/news/tutte-le-tasse-di-fioramonti-tra-inefficacia-e-iniquita-276660/\"\n  },\n  {\n    title: \"In Italia il salario minimo serve solo alla politica\",\n    publication: \"Il Foglio\",\n    date: \"04 settembre 2019\",\n    coauthor: \"Matteo Paradisi\",\n    pdf: \"/opeds/salario_minimo_foglio.pdf\",\n    digital: \"https://www.ilfoglio.it/economia/2019/09/04/news/in-italia-il-salario-minimo-universale-serve-solo-alla-politica-272279/\"\n  }\n];\n\n\nconst title = \"Op-eds\";\nconst description = \"A collection of newspaper publications by Francesco.\";\n---\n\n<Base title={title} description={description}>\n\n<section>\n  <h2 class=\"text-2xl font-medium mb-6\">Op-eds in Italian Newspapers</h2>\n  <div class=\"space-y-4\">\n    {opEds.map((opEd, index) => (\n      <div key={index} class=\"flex flex-col space-y-1\">\n        <div class=\"flex justify-between items-baseline\">\n          <span class=\"text-black dark:text-white tracking-tight font-bold\">\n            {opEd.title}\n          </span>\n\n          <div class=\"text-neutral-600 dark:text-neutral-400 tabular-nums text-sm flex items-center space-x-2\">\n            {opEd.pdf && (\n              <a\n                href={opEd.pdf}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                class=\"hover:underline\"\n              >\n                pdf\n              </a>\n            )}\n            {opEd.pdf && opEd.digital && <span>|</span>}\n            {opEd.digital && (\n              <a\n                href={opEd.digital}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                class=\"hover:underline\"\n              >\n                digital\n              </a>\n            )}\n          </div>\n        </div>\n\n        <p class=\"text-sm text-neutral-600 dark:text-neutral-400\">\n          {opEd.publication}, {opEd.date}\n          {opEd.coauthor && `, con ${opEd.coauthor}`}\n        </p>\n      </div>\n    ))}\n  </div>\n</section>\n\n\n</Base>"}, 
 {"path": "src/pages/research/index.astro", "content": "---\nimport Base from \"../../layouts/Base.astro\";\n\nconst wp = [\n\n  {\n    title: \"Workers as Partners: a Theory of Responsible Firms in Labor Markets\",\n    coauthors: [{ name: \"Marc Fleurbaey\", url: \"https://sites.google.com/site/marcfleurbaey/Home\" }],\n    description:\n      \"We develop a theoretical framework analyzing responsible firms (REFs) that prioritize worker welfare alongside profits in labor markets with search frictions. At the micro level, REFsâ use of market power varies with labor conditions: they refrain from using it in slack markets but may exercise it in tight markets without harming workers. Our macro analysis shows these firms offer higher wages, creating a distinct high-wage sector. When firms endogenously choose worker bargaining power, there is trade-off between worker surplus and employment, though this improves with elastic labor supply. While REFs cannot survive with free entry, they can coexist with profit-maximizing firms under limited competition, where their presence forces ordinary firms to raise wages.\",\n    pdf: \"/RF_theory.pdf\",\n    arxiv: \"https://arxiv.org/abs/2411.05567\",\n  },\n\n  {\n    title: \"The Importance of Working for Earnest: Climbing the Job Ladder through Firmsâ Connectivity\",\n    notes: \"> Project selected for the VisitINPS 2019 program\",\n    description:\n      \"Do workers consider a firmâs âspringboardâ value in terms of future job opportunities when choosing an employer? Using a search model of the labor market, I introduce the idea that firms differ in enhancing their employeesâ chances of receiving external job offers. The model informs a firm-level proxy for outside job offers received by workers. This measure empirically aligns with key model predictions: 1) it negatively correlates with both firm-specific tenure and young workersâ entry salaries, revealing a compensating differential; and 2) it suggests that workers enjoy a salary premium upon leaving such firms, indicative of faster career progression. The model is estimated on administrative data from Italy and successfully captures key aspects of labor market dynamics. My channel explains 10% of the overall job-to-job transitions and shows how firm-induced variation in job search can be a significant driver of inequality, especially at the bottom of the wage distribution.\",\n    pdf: \"/JMP_DelPrato.pdf\",\n  },\n\n    {\n    title: \"Frictions and Welfare in Monopolistic Competition\",\n    coauthors: [{ name: \"Paolo Zacchia\", url: \"http://paolozacchia.com\" }],\n    description:\n      \"We study informational financial frictions in heterogeneous firm economies with monopolistic competition. We extend the Melitz model by introducing banks that finance entrepreneurs under asymmetric information. While aggregate productivity decreases with information frictions, welfare can be maximized at intermediate levels of asymmetry due to a trade-off between productivity and product variety. Furthermore, moderate input cost distortions can improve welfare when financial frictions are severe by offsetting the resulting weak firm selection.\",\n    pdf: \"/iff.pdf\",\n  },\n\n  {\n    title: \"The Heterogeneous Consequences of Reduced Labor Costs on Firm Productivity\",\n    coauthors: [{ name: \"Paolo Zacchia\", url: \"http://paolozacchia.com\" }],\n    notes: \"> New version coming soon! | Project selected for the VisitINPS 2020 program\",\n    description:\n      \"We document how a reduction in labor costs led to heterogeneous effects on manufacturing firmsâ total factor productivity (TFP). Leveraging an Italian labor legislation reform and unique institutional features of the local collective bargaining system, we show that such effects vary along the TFP distribution. Relative to the counterfactual, TFP markedly declines on the left tail, which we explain via selection mechanisms; on the right, TFP mildly increases as firms are able to expand and reallocate their workforce. We develop a general equilibrium model featuring firm selection and frictions in input markets to guide the evaluation of welfare implications.\",\n  },\n\n  {\n    title: \"Optimal Ramsey Taxation with Social Security\",\n    coauthors: [\n      { name: \"Marco Francischello\", url: \"https://marcofrancis.me\" },\n      { name: \"Matteo Paradisi\", url: \"http://matteoparadisi.com\" }\n    ],\n    notes: \"> Project awarded with a Netspar Comparative Research Grant 2021\",  \n    description:\n      \"We develop an OLG model with heterogeneous agents and aggregate uncertainty to study optimal Ramsey taxation when the government can use a credible set of social security instruments. Social security mitigates the income effect in optimal labor tax smoothing and, together with heterogeneity, adds new redistributive motives to both labor and capital taxes while crowding out others. We calibrate the model on three different economies: the US, Netherlands, and Italy. We argue that the three countries would experience heterogeneous gains, in redistributive and efficiency terms, by moving from the status-quo allocations to those prescribed by a utilitarian Ramsey planner. Our simulations show that retirement benefits in the current economies are higher than their Ramsey-optimal level while we argue that the use of funded social security schemes, neglected in current actual policies, could be welfare improving.\",\n    pdf: \"/ot_retirement_paper.pdf\",\n  },\n\n\n];\n\n\nconst wip = [\n\n  {\n    title: \"Responsible Firms on the Labor Market\",\n    coauthors: [{ name: \"Marc Fleurbaey\", url: \"https://sites.google.com/site/marcfleurbaey/Home\" }],\n    notes: \"Project selected for the VisitINPS 2023 program\",\n    description: \n\t\"Responsible firms prioritize maximizing stakeholder value, which entails balancing the surpluses of their customers and workers along with their profits. In this paper, we focus on firms' behavior within the labor market and introduce a theory-backed method for identifying responsible firms using administrative data. By integrating measures of labor market power and systematic utility provided to workers, we construct a multi-dimensional index of responsibility. This enables us to categorize companies and assess the degree of a firm's responsibility throughout its life cycle. Furthermore, we evaluate the influence of a firm's responsibility on income inequalities both within and between firms.\",\n  },\n\n  {\n    title: \"Human Capital Value Chains\",\n    coauthors: [{ name: \"Paolo Zacchia\", url: \"http://paolozacchia.com\" }],\n    notes: \"Project selected for the VisitINPS 2023 program\",\n    description: \n\t\"In local labor markets, a pattern often emerges where workers transition during the early stages of their careers from lower-paying firms that provide comprehensive training to higher-paying specialized firms that predominantly employ already-trained workers. We refer to this mechanism as the âHuman Capital Value Chainâ (HCVC). We study and document its impact on the trajectory of workers' wages and local agglomeration externalities, thereby highlighting its role in the broader labor market dynamics.\",\n  },\n\n  {\n    title: \"Generalized AKM: Theory and Evidence\",\n    coauthors: [\n\t{ name: \"Yaroslav Korobka\" },\n\t{ name: \"Paolo Zacchia\", url: \"http://paolozacchia.com\" }\n    ],\n    description: \n\t\"We revisit the wage decomposition literature by allowing for a non-parametric function of both worker- and firm-level covariates in a wage equation with two-way (worker and firm) fixed effects. We develop theoretical results about the estimation of key covariance components and an application on Portuguese data.\",\n  },\n\n];\n\n\n\nconst title = \"Working Papers and Work in Progress\";\nconst description = \"A collection of working papers and work in progress by the author.\";\n---\n\n<Base title={title} description={description}>\n  <section>\n    <!-- Working Papers Section -->\n    <h1 class=\"mb-8 text-2xl font-medium tracking-tight\">Working Papers</h1>\n    <div class=\"space-y-6\">\n      {wp.map((project, index) => (\n        <div class=\"flex flex-col\" key={index}>\n          <div class=\"w-full flex justify-between items-baseline\">\n            <span class=\"text-black dark:text-white tracking-tight font-bold\">\n              {project.title}\n            </span>\n            \n            <div class=\"text-neutral-600 dark:text-neutral-400 tabular-nums text-sm ml-2 flex items-center space-x-2\">\n              {project.pdf && (\n                <a\n                  href={project.pdf}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  class=\"hover:underline\"\n                >\n                  PDF\n                </a>\n              )}\n              {project.pdf && project.arxiv && <span>|</span>}\n              {project.arxiv && (\n                <a\n                  href={project.arxiv}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  class=\"hover:underline\"\n                >\n                  ArXiv\n                </a>\n              )}\n            </div>\n          </div>\n          \n          {project.coauthors && (\n            <p class=\"italic\">\n              Joint with{\" \"}\n              {project.coauthors.map((author, i) => (\n                <span key={i}>\n                  {author.url ? (\n                    <a\n                      href={author.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      class=\"text-blue-500 hover:underline\"\n                    >\n                      {author.name}\n                    </a>\n                  ) : (\n                    author.name\n                  )}\n                  {i < project.coauthors.length - 2 ? \", \" : i === project.coauthors.length - 2 ? \" and \" : \"\"}\n                </span>\n              ))}\n            </p>\n          )}\n          \n          {project.notes && (\n            <p class=\"text-neutral-600 dark:text-neutral-400 tabular-nums text-sm\">{project.notes}</p>\n          )}\n          \n          <!-- Toggleable Description with Left-Aligned \"Show More\" Button -->\n          <button\n            onclick={`document.getElementById('wp-desc-${index}').classList.toggle('hidden')`}\n            class=\"text-neutral-600 dark:text-neutral-400 tabular-nums text-sm flex items-center mt-2\"\n          >\n            <span class=\"mr-1\">â¼</span> Abstract\n          </button>\n          \n          <p id={`wp-desc-${index}`} class=\"prose prose-neutral dark:prose-invert pt-3 hidden\">\n            {project.description}\n          </p>\n        </div>\n      ))}\n    </div>\n  </section>\n\n  \n  <!-- Work in Progress Section -->\n  <h1 class=\"mb-8 mt-12 text-2xl font-medium tracking-tight\">Selected Work in Progress</h1>\n  <div class=\"space-y-6\">\n    {wip.map((project, index) => (\n      <div class=\"flex flex-col\" key={`wip-${index}`}>
        <div class=\"w-full flex justify-between items-baseline\">\n          <span class=\"text-black dark:text-white tracking-tight font-bold\">\n            {project.title}\n          </span>\n          {project.year && (\n            <span class=\"text-neutral-600 dark:text-neutral-400 tabular-nums text-sm\">\n              {project.year}\n            </span>\n          )}\n        </div>\n\n        {project.coauthors && (\n          <p class=\"italic\">\n            Joint with{\" \"}\n            {project.coauthors.map((author, i) => (\n              <span key={i}>\n                {author.url ? (\n                  <a\n                    href={author.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    class=\"text-blue-500 hover:underline\"\n                  >\n                    {author.name}\n                  </a>\n                ) : (\n                  author.name\n                )}\n                {i < project.coauthors.length - 2 ? \", \" : i === project.coauthors.length - 2 ? \" and \" : \"\"}\n              </span>\n            ))}\n          </p>\n        )}\n\n        {project.notes && (\n          <p class=\"text-neutral-600 dark:text-neutral-400 tabular-nums text-sm\">\n            {project.notes}\n          </p>\n        )}\n\n        <!-- Toggleable Description with Left-Aligned \"Show More\" Button -->\n        <button\n          onclick={`document.getElementById('wip-desc-${index}').classList.toggle('hidden')`}\n          class=\"text-neutral-600 dark:text-neutral-400 tabular-nums text-sm flex items-center mt-2\"\n        >\n          <span class=\"mr-1\">â¼</span> Short abstract\n        </button>\n\n        <p id={`wip-desc-${index}`} class=\"prose prose-neutral dark:prose-invert pt-3 hidden\">\n          {project.description}\n        </p>\n      </div>\n    ))}\n  </div>\n</Base>"}, 
 {"path": "src/pages/teaching/index.astro", "content": "---\nimport Base from \"../../layouts/Base.astro\";\n\nconst teachingExperience = [\n  {\n    institution: \"CERGE-EI\",\n    course: \"Microeconometrics, Ph.D.\",\n    term: \"Fall 2021\",\n    details: \"Lectures on random search models and their estimation through SMM (slides available upon request)\"\n  },\n  {\n    institution: \"IMT Lucca\",\n    courses: [\n      {\n        name: \"Econometrics I, Ph.D.\",\n        term: \"Spring 2019, 2020\",\n        role: \"TA for prof. Paolo Zacchia\"\n      },\n      {\n        name: \"Microeconomics, Ph.D.\",\n        term: \"Fall 2019\",\n        role: \"TA for prof. Andrea Canidio and prof. Kenan Huremovic\"\n      }\n    ]\n  },\n  {\n    institution: \"KU Leuven\",\n    details: \"Advising assistant for master studentsâ theses\"\n  }\n];\n\n\nconst currentTeaching = [\n  {\n    institution: \"Aarhus University\",\n    course: \"5425/6425: Advanced Micro and Macro Models of the Labor Market\",\n    term: \"Spring 2025\",\n  }\n];\n\n\n\nconst title = \"Teaching\";\nconst description = \"The teaching of Francesco Del Prato\";\n---\n\n<Base title={title} description={description}>\n\n<section>\n  <h2 class=\"text-2xl font-medium mb-6\">Current Teaching</h2>\n  <div class=\"space-y-4\">\n    {currentTeaching.map((entry, index) => (\n      <div key={index} class=\"flex flex-col space-y-1\">\n        <span class=\"font-bold\">{entry.institution}</span>\n        <p class=\"text-sm\">\n          {entry.course} ({entry.term}) - {entry.details}\n        </p>\n      </div>\n    ))}\n  </div>\n</section>\n\n<br><br>\n\n<section>\n  <h2 class=\"text-2xl font-medium mb-6\">Teaching Experience</h2>\n  <div class=\"space-y-4\">\n    {teachingExperience.map((entry, index) => (\n      <div key={index} class=\"flex flex-col space-y-1\">\n        <span class=\"font-bold\">{entry.institution}</span>\n        \n        {entry.course ? (\n          <p class=\"text-sm\">\n            {entry.course} ({entry.term}) - {entry.details}\n          </p>\n        ) : (\n          entry.courses && entry.courses.map((course, i) => (\n            <p key={i} class=\"text-sm\">\n              {course.name} ({course.term}) - {course.role}\n            </p>\n          ))\n        )}\n\n        {entry.details && !entry.course && (\n          <p class=\"text-sm text-neutral-700\">{entry.details}</p>\n        )}\n      </div>\n    ))}\n  </div>\n</section>\n\n   \n</Base>"}
]
"""

# Load the files_content from the raw string
files_content = json.loads(files_content_raw)

images_missing_alt = []
image_paths_for_size_check = set()

for file_data in files_content:
    file_path = file_data["path"]
    content = file_data["content"]

    # Find HTML <img> tags
    # Iterate over all img tags first to get their full tag string for context
    for img_tag_match in re.finditer(r'<img([^>]+)>', content, re.IGNORECASE):
        img_tag_full = img_tag_match.group(0)
        src_match = re.search(r'src\s*=\s*["']([^"']+)["']', img_tag_full, re.IGNORECASE)
        if not src_match:
            continue
        src = src_match.group(1)
        
        alt_match = html_alt_regex.search(img_tag_full)
        if alt_match:
            alt_text = alt_match.group(1).strip()
            if not alt_text: # Alt attribute exists but is empty
                images_missing_alt.append({"file": file_path, "src": src, "type": "html_img_empty_alt", "alt_text": ""})
        else: # No alt attribute at all
            images_missing_alt.append({"file": file_path, "src": src, "type": "html_img_no_alt_attr", "alt_text": "Missing"})

        if src and not src.startswith("http") and not src.startswith("{"):
            image_paths_for_size_check.add(src)

    # Find Astro <Image /> components
    for img_tag_match in re.finditer(r'<Image([^>]+?)/?>', content, re.IGNORECASE | re.DOTALL):
        img_tag_full = img_tag_match.group(0)
        src_match = re.search(r'src\s*=\s*["']([^"']+)["']', img_tag_full, re.IGNORECASE) # Simplified src match
        if not src_match:
            # Try to match src={variable} - this is a basic heuristic
            src_match_var = re.search(r'src\s*=\s*\{([^}]+)\}', img_tag_full, re.IGNORECASE)
            if src_match_var:
                src = src_match_var.group(1) # This will be the variable name, e.g., image.src
            else:
                continue # No recognizable src found
        else:
            src = src_match.group(1)

        alt_match = astro_alt_regex.search(img_tag_full)
        if alt_match:
            # Group 2 for "alt=\"string\"" and Group 3 for "alt={variable}"
            alt_text_literal = alt_match.group(2)
            alt_text_variable = alt_match.group(3)
            
            if alt_text_literal is not None and not alt_text_literal.strip():
                images_missing_alt.append({"file": file_path, "src": src, "type": "astro_image_empty_alt", "alt_text": ""})
            elif alt_text_variable is not None and (alt_text_variable.strip() == '""' or alt_text_variable.strip() == "``"):
                images_missing_alt.append({"file": file_path, "src": src, "type": "astro_image_empty_var_alt", "alt_text": ""})
            # If alt_text_variable is present and not empty string literal, assume it's a valid dynamic alt
            elif alt_text_literal is None and alt_text_variable is None:
                 images_missing_alt.append({"file": file_path, "src": src, "type": "astro_image_no_alt_value", "alt_text": "None"})

        else: # No alt attribute at all
            images_missing_alt.append({"file": file_path, "src": src, "type": "astro_image_no_alt_attr", "alt_text": "Missing"})

        if src and isinstance(src, str) and not src.startswith("http") and not src.startswith("{"):
            if "${import.meta.env.BASE_URL}" in src:
                src = src.replace("${import.meta.env.BASE_URL}", "/") 
            image_paths_for_size_check.add(src.strip())

    # Find Markdown image syntax
    for match in markdown_image_regex.finditer(content):
        alt = match.group(1).strip()
        src_md = match.group(2)
        if not alt:
            images_missing_alt.append({"file": file_path, "src": src_md, "type": "markdown", "alt_text": alt})
        if src_md and not src_md.startswith("http") and not src_md.startswith("{"):
            if src_md.startswith("./") or (not src_md.startswith("/") and not ":" in src_md) :
                possible_local_path = os.path.normpath(os.path.join(os.path.dirname(file_path), src_md))
                image_paths_for_size_check.add(possible_local_path.strip())
            elif src_md.startswith("/") and not src_md.startswith("//"):
                 image_paths_for_size_check.add(src_md.strip())

    # ImageGrid data structure in custom-mdx-examples.mdx and ImageGrid.astro
    if "ImageGrid.astro" in file_path or "custom-mdx-examples.mdx" in file_path:
        for grid_match in image_grid_prop_regex.finditer(content):
            images_array_str = grid_match.group(1)
            for item_match in image_grid_item_regex.finditer(images_array_str):
                item_src = item_match.group(1)
                item_alt = item_match.group(2).strip()
                if not item_alt:
                    # This specifically checks the data structure provided to ImageGrid
                    images_missing_alt.append({"file": file_path, "src": item_src, "type": "image_grid_item_data", "alt_text": item_alt})
                if item_src and not item_src.startswith("http"):
                    image_paths_for_size_check.add(item_src.strip())

output_data = {
    "missing_alt": images_missing_alt,
    "paths_for_size_check": list(image_paths_for_size_check) 
}

print(json.dumps(output_data, indent=2))

